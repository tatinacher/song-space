{"version":3,"sources":["assets/icons/icons8-search.svg","assets/img/background.jpg","lib/request/index.tsx","features/authors/model.ts","api/authors/index.ts","constants/breakpoints.ts","ui/organisms/header/style.tsx","ui/organisms/header/index.tsx","ui/atoms/button-primary/index.tsx","ui/atoms/button-icon/index.tsx","ui/atoms/input/index.ts","ui/atoms/lyrics-text/index.tsx","ui/atoms/text/index.tsx","ui/atoms/textarea/index.tsx","ui/atoms/switch/index.tsx","ui/atoms/title/index.tsx","ui/organisms/form-login/index.tsx","features/search/model.ts","api/search/index.ts","ui/molecules/search-field/index.tsx","ui/molecules/chord/index.tsx","ui/organisms/table/style.tsx","ui/organisms/table/index.tsx","assets/icons/melody.svg","pages/band/style.tsx","pages/bands/index.tsx","pages/create/song/model.ts","api/songs/index.ts","pages/create/song/index.tsx","pages/create/variation/model.ts","constants/chords.ts","lib/chords/index.ts","pages/create/variation/index.tsx","pages/login/index.tsx","pages/main/style.tsx","pages/main/model.ts","pages/main/last-records.tsx","pages/main/popular-records.tsx","features/song/model.ts","features/visuals/model.ts","pages/song/index.tsx","features/song/chords.ts","features/song/song-chords.ts","pages/song-chords/style.tsx","pages/song-chords/model.tsx","pages/song-chords/index.tsx","lib/chords/fitChords.ts","pages/router.tsx","pages/main/index.tsx","pages/song-variations/index.tsx","pages/band/index.tsx","style.ts","index.tsx"],"names":["module","exports","request","a","url","method","params","headers","Accept","options","body","JSON","stringify","fetch","response","json","result","ok","Error","data","getAuthors","createEffect","getAuthorSongs","use","id","$authors","createStore","$authorSongs","on","done","_","fail","error","console","log","$authorSongsPending","pending","size","device","desktop","tablet","Nav","styled","nav","Menu","li","Content","div","Hide","MenuBlock","Item","Link","Header","to","role","aria-label","ButtonPrimary","button","ButtonIcon","props","icon","Input","input","LyricsText","fontSize","Text","p","Textarea","textarea","Switch","status","onClick","Label","type","checked","Span","label","Title","h1","SongTitle","h3","FormLogin","Form","FormInput","name","Button","Signup","searchEffect","search","$searchRequest","$searchResponse","submitForm","createEvent","handleChange","state","event","target","value","sample","source","clock","payload","SearchField","placeholder","song","useStore","searchResult","SearchBlock","Search","onSubmit","preventDefault","onChange","SearchButton","searchIcon","SearchResult","map","title","Result","form","Chords","showSpaces","ChordLine","chord","key","afterSpaces","length","beforeSpaces","Chord","color","line","repeat","style","TableContainer","table","Thead","thead","Row","td","TableBody","rows","columns","column","Table","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","fill","viewBox","width","height","ref","ForwardRef","forwardRef","BandsBlock","SearchWrapper","$song","_id","saveSong","fullText","lyrics","songId","chords","updateSong","songVariation","chordsKeys","chordColor","chordsSuffixes","checkIfChordsLine","arrLine","word","isChord","chordKey","keyChord","forEach","includes","containsKey","slice","hasSuffix","removeExtraSpaces","replace","trim","split","isChordsLine","array","lines","simpleLine","filter","b","findColorByName","allChords","setChords","nextLine","previousColor","res","maxLendth","index","chordsLine","position","positionNext","push","chordPosition","nextChordPosition","spases","parseLyrics","lyricLines","Set","el","add","getAllChords","chordsWithColors","setColors","chordsInfo","text","Array","from","Song","LoginPage","MainPage","Background","img","ContentSongs","getLastRecords","$lastSongs","count","LastRecords","lastSongs","React","songs","SongLink","Container","Block","Big","Small","LastSongs","PopularRecords","setField","setSize","newTitle","newText","prepend","e","newSize","getSongVariations","$songVariations","getLyricChrods","$lyricChords","Lyrics","ChordContainer","ChordsScheme","Page","Switches","Changes","SwitchBlock","changeInstrument","$isGuitar","showChords","main","tunings","chordToDisplay","mains","suffix","allUkulelechords","chordsOfInstrument","find","positions","instrument","ChordsAndText","isChordsOn","isLyricsOn","maxSize","textWords","chordIndex","final","lineLength","lineChords","chordLength","undefined","fullChordLendth","remainSpaces","cutText","Tab","Display","guitar","ukulele","routes","path","component","exact","useParams","variation","author","authors","description","authorSongs","setChrodsSwitch","setLyricsSwitch","isGuitar","lyricChords","changeFontSize","window","innerWidth","lyricLine","onClickHandler","preview","Body","App","route","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1bb76e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons8-search.6da1cfa9.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.45f4ab54.jpg\";","export type RequestProps = {\n  method: string;\n  url: string;\n  params?: object;\n};\n\nexport const request = async ({\n  url,\n  method,\n  params = {}\n}: RequestProps): Promise<any> => {\n  const request =\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n      ? process.env.REACT_APP_HOST + \"/api\" + url\n      : \"/api\" + url;\n  const headers = {\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n    Accept: \"application/json\"\n  };\n  const options =\n    method === \"get\"\n      ? { headers, method }\n      : {\n          headers,\n          method,\n          body: JSON.stringify(params)\n        };\n\n  try {\n    const response = await fetch(request, options);\n    const result = await response.json();\n    if (!response.ok) {\n      throw new Error(result);\n    }\n    return result.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import { createEffect, createStore } from \"effector\";\n\nimport { Author, AuthorSongs, fetchAuthors, fetchAuthor } from \"api/authors\";\n\nexport const getAuthors = createEffect<void, Author[]>();\nexport const getAuthorSongs = createEffect<string, AuthorSongs>();\n\ngetAuthors.use(fetchAuthors);\ngetAuthorSongs.use(fetchAuthor);\n\nexport const $authors = createStore<Author[]>([]);\nexport const $authorSongs = createStore<AuthorSongs | null>(null);\n\n$authors.on(getAuthors.done, (_, { result }) => {\n  return result;\n});\n\n$authors.on(getAuthors.fail, (_, { params, error }) => {\n  console.log(params, error);\n});\n\nexport const $authorSongsPending = getAuthorSongs.pending;\n\n$authorSongs.on(getAuthorSongs.done, (_, { result }) => {\n  return result;\n});\n\n$authorSongs.on(getAuthorSongs.fail, (_, { params, error }) => {\n  console.log(params, error);\n});\n","import { request } from \"lib/request\";\n\nexport type Author = {\n  author: string;\n  description: string;\n  _id: string;\n};\n\nexport type Song = {\n  title: string;\n  id: string;\n};\n\nexport type AuthorSongs = {\n  author: string;\n  songs: Song[];\n};\n\nexport const fetchAuthors = (): Promise<Author[]> =>\n  request({\n    url: \"/authors\",\n    method: \"get\"\n  });\n\nexport const fetchAuthor = (id: string): Promise<AuthorSongs> =>\n  request({\n    url: `/author/${id}`,\n    method: \"get\"\n  });\n","export const size = {\n  tablet: \"768px\",\n  desktop: \"1440px\"\n};\n\nexport const device = {\n  desktop: `(min-width:${size.desktop})`,\n  tablet: `(min-width:${size.tablet})`\n};\n","import styled from \"styled-components\";\nimport { device } from \"constants/breakpoints\";\nimport { Link } from \"react-router-dom\";\n\nexport const Nav = styled.nav`\n  /*background: var(--bg);*/\n  display: flex;\n  justify-content: center;\n  border-bottom: 2px solid var(--accent);\n  position: relative;\n  position: fixed;\n  width: 100%;\n  z-index: 1;\n  background: #fff;\n  box-shadow: 0 0 10px rgba(173, 150, 150, 0.5);\n`;\n\nexport const Menu = styled.li`\n  list-style-type: none;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 10px 15px;\n    text-decoration: none;\n    color: var(--bg);\n    font-weight: 300;\n    cursor: pointer;\n    letter-spacing: 1px;\n  }\n  &:hover {\n    background: var(--accent);\n    a {\n      color: var(--main);\n    }\n  }\n\n  &:first-child {\n    font-size: 25px;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  position: relative;\n\n  @media ${device.tablet} {\n    max-width: 350px;\n  }\n  @media ${device.tablet} {\n    max-width: 700px;\n  }\n  @media ${device.desktop} {\n    max-width: 1000px;\n  }\n`;\n\nexport const Hide = styled.div`\n  display: none;\n`;\n\nexport const MenuBlock = styled.div`\n  display: flex;\n`;\n\nexport const Item = styled(Link)`\n  padding: 10px 15px;\n  text-decoration: none;\n  color: var(--main);\n  font-weight: 300;\n  cursor: pointer;\n  letter-spacing: 1px;\n  font-size: 16px;\n`;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Content, Hide, Item, Menu, MenuBlock, Nav } from \"./style\";\n\nexport const Header: React.FC = () => (\n  <>\n    <Nav>\n      <Content>\n        <MenuBlock>\n          <Menu>\n            <Link to=\"/\">\n              <span role=\"img\" aria-label=\"guitar\">\n                🎸\n              </span>\n            </Link>\n          </Menu>\n          <Menu>\n            <Link to=\"/bands\">Bands</Link>\n          </Menu>\n          <Menu>\n            <Link to=\"/song\">Songs</Link>\n          </Menu>\n          <Hide>\n            <Menu>\n              <Link to=\"/create-song-variation\">Create Song Variation</Link>\n            </Menu>\n            <Menu>\n              <Link to=\"/create-song\">Create Song</Link>\n            </Menu>\n          </Hide>\n        </MenuBlock>\n        <MenuBlock>\n          <Menu>\n            <Item to=\"/login\">Sign in</Item>\n          </Menu>\n        </MenuBlock>\n      </Content>\n    </Nav>\n  </>\n);\n","import styled from \"styled-components\";\nimport { device } from \"constants/breakpoints\";\n\nexport const ButtonPrimary = styled.button`\n  padding: 10px 15px;\n  font-weight: 300;\n  border: 0;\n  border-radius: 5px;\n  font-size: 16px;\n  letter-spacing: 1px;\n  background: var(--bg);\n  color: var(--main);\n  outline: none;\n  font-family: \"Roboto Mono\";\n\n  &:hover {\n    cursor: pointer;\n    background: var(--accent);\n  }\n\n  @media ${device.desktop} {\n    font-size: 20px;\n    padding: 15px 25px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { device } from \"constants/breakpoints\";\n\nexport const ButtonIcon = styled.button<{ icon: string }>`\n  outline: none;\n  border: 0;\n  background: transparent;\n  width: 25px;\n  height: 25px;\n  background-size: cover;\n  background-image: url(${props => props.icon});\n  &:hover {\n    cursor: pointer;\n  }\n  @media ${device.desktop} {\n    width: 30px;\n    height: 30px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  font-size: 14px;\n  padding: 7px;\n  border-radius: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const LyricsText = styled.div<{\n  fontSize: number;\n}>`\n  font-size: ${props => props.fontSize}px;\n  white-space: pre;\n`;\n","import styled from \"styled-components\";\n\nexport const Text = styled.p`\n  font-size: 14px;\n  padding: 5px;\n`;\n","import styled from \"styled-components\";\n\nexport const Textarea = styled.textarea`\n  border: 1px solid #ccc;\n  font-size: 14px;\n  font-family: \"Roboto Mono\", monospace;\n  font-weight: 300;\n  max-width: 800px;\n  width: 100%;\n  height: 200px;\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface SwitchProps {\n  status: boolean;\n  onClick(status: boolean): void;\n  id: string;\n}\nexport const Switch: React.FC<SwitchProps> = ({ status, onClick, id }) => (\n  <Label>\n    <Input\n      onClick={() => onClick(!status)}\n      type=\"checkbox\"\n      id={id}\n      checked={status}\n    />\n    <Span />\n  </Label>\n);\n\nexport const Label = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 60px;\n  height: 34px;\n`;\nexport const Span = styled.div`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--accent);\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    cursor: pointer;\n    top: 4px;\n    left: 4px;\n    right: 0;\n    bottom: 0;\n    background-color: #fff;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const Input = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n  &:checked + ${Span} {\n    background-color: #2196f3;\n  }\n  &:focus + ${Span} {\n    box-shadow: 0 0 1px #2196f3;\n  }\n  &:checked + ${Span}:before {\n    transform: translateX(26px);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  padding: 15px;\n  color: #fff;\n  font-weight: 400;\n  font-size: 40px;\n`;\n\nexport const SongTitle = styled.h3`\n  padding: 10px;\n  color: #000;\n  font-weight: 400;\n  font-size: 20px;\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Input, ButtonPrimary } from \"ui/atoms\";\n\nexport const FormLogin: React.FC = () => (\n  <Form>\n    <FormInput>\n      <label>Username</label>\n      <Input name=\"login\" />\n    </FormInput>\n    <FormInput>\n      <label>Password</label>\n      <Input type=\"password\" />\n    </FormInput>\n    <Button>\n      <ButtonPrimary>Login</ButtonPrimary>\n    </Button>\n    <Signup>SingUp</Signup>\n  </Form>\n);\n\nexport const Form = styled.div`\n  width: 200px;\n  background: #fff;\n  padding: 15px;\n`;\n\nexport const FormInput = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Button = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Signup = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { createEffect, createStore, createEvent, sample } from \"effector\";\nimport { search } from \"api/search\";\nimport { Song } from \"constants/types\";\n\nexport const searchEffect = createEffect<string, any>();\n\nsearchEffect.use(search);\n\nexport const $searchRequest = createStore<string>(\"\");\nexport const $searchResponse = createStore<Song[]>([]);\n\nexport const submitForm = createEvent<React.FormEvent<HTMLFormElement>>();\nexport const handleChange = createEvent<any>();\n\n$searchRequest.on(handleChange, (state, event) => {\n  return event.target.value;\n});\n\nsample({\n  source: $searchRequest,\n  clock: submitForm,\n  target: searchEffect\n});\n\n$searchResponse.on(searchEffect.done, (_, payload) => payload.result);\n","import { request } from \"lib/request\";\n\nexport const search = (search: string): Promise<any> =>\n  request({\n    url: `/search/?request=${search}`,\n    method: \"get\"\n  });\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ButtonIcon } from \"ui/atoms\";\nimport {\n  $searchRequest,\n  $searchResponse,\n  handleChange,\n  submitForm\n} from \"features/search\";\nimport { useStore } from \"effector-react\";\nimport { Link } from \"react-router-dom\";\nimport { device } from \"constants/breakpoints\";\nimport searchIcon from \"assets/icons/icons8-search.svg\";\n\nexport const SearchField: React.FC<{ placeholder: string }> = ({\n  placeholder\n}) => {\n  const song = useStore($searchRequest);\n  const searchResult = useStore($searchResponse);\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    submitForm(event);\n  };\n  return (\n    <SearchBlock>\n      <Search onSubmit={onSubmit}>\n        <Input value={song} onChange={handleChange} placeholder={placeholder} />\n        <SearchButton>\n          <ButtonIcon icon={searchIcon} />\n        </SearchButton>\n      </Search>\n      <SearchResult>\n        {searchResult.map(({ title, id }) => (\n          <Result to={`song/${id}`}>{title}</Result>\n        ))}\n      </SearchResult>\n    </SearchBlock>\n  );\n};\n\nexport const Search = styled.form`\n  padding: 0 20px 0 0;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    box-sizing: border-box;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px 40px 10px 15px;\n  border-radius: 5px;\n  border: 0;\n  outline: none;\n  font-size: 16px;\n  margin-right: 5px;\n  background: #fff;\n  appearance: none;\n  font-weight: 300;\n  font-family: \"Roboto Mono\";\n\n  :focus {\n  }\n\n  ::placeholder {\n    color: #444054;\n  }\n\n  @media ${device.desktop} {\n    font-size: 20px;\n    padding: 15px 25px;\n  }\n`;\n\nexport const SearchResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media ${device.desktop} {\n    flex-direction: row;\n  }\n`;\n\nexport const Result = styled(Link)`\n  min-width: 100px;\n  max-height: 20px;\n  background: #fff;\n  color: #000;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* animation: 1s ease-out 0s 1 slideInFromRight;\n  @keyframes slideInFromRight {\n    0% {\n      transform: translateX(100%);\n    }\n    100% {\n      transform: translateX(0);\n    }\n  } */\n`;\n\nexport const SearchBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SearchButton = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 32px;\n\n  @media ${device.desktop} {\n    top: 12px;\n    right: 35px;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ChordsType } from \"constants/types\";\n\ninterface ChordsProps {\n  data?: ChordsType[];\n  fontSize: number;\n  showSpaces?: boolean;\n}\n\nexport const Chords: React.FC<ChordsProps> = ({\n  data,\n  fontSize,\n  showSpaces\n}) => {\n  if (!data) return null;\n  return (\n    <ChordLine fontSize={fontSize}>\n      {data.map((chord, key) => {\n        if (!showSpaces) {\n          chord.afterSpaces = 10 - chord.name.length;\n          chord.beforeSpaces = 0;\n        }\n        return <Chord key={key} {...chord} />;\n      })}\n    </ChordLine>\n  );\n};\n\nexport const Chord: React.FC<ChordsType> = ({\n  beforeSpaces,\n  afterSpaces,\n  name,\n  color\n}) => {\n  let line = name;\n  if (beforeSpaces > 0) {\n    line = \" \".repeat(beforeSpaces) + line;\n  }\n  if (afterSpaces > 0) {\n    line = line + \" \".repeat(afterSpaces);\n  }\n  return <div style={{ color: color }}>{line}</div>;\n};\n\nexport const ChordLine = styled.div<{\n  fontSize: number;\n}>`\n  display: flex;\n  white-space: pre-wrap;\n  font-size: 14px;\n  font-weight: bold;\n  font-size: ${props => props.fontSize}px;\n`;\n","import styled from \"styled-components\";\n\nexport const TableContainer = styled.table`\n  padding: 0px;\n  table-layout: fixed;\n  width: 100%;\n  margin: 30px 0;\n`;\n\nexport const Thead = styled.thead`\n  margin: 0px;\n  text-align: center;\n  td {\n    padding: 10px;\n    border-bottom: 1px solid var(--bg);\n  }\n`;\n\nexport const Row = styled.td`\n  border-bottom: 1px solid #bebbbb;\n  padding: 10px;\n  text-align: center;\n  a {\n    color: black;\n    text-decoration: none;\n  }\n  &:hover {\n    background: #bebbbb;\n  }\n`;\n","import * as React from \"react\";\nimport { Row, TableContainer, Thead } from \"./style\";\n\nexport type Column<T> = {\n  name: string;\n  key: keyof T;\n};\n\ninterface TableProps<T> {\n  columns: Column<T>[];\n  data: T[];\n}\n\ninterface TableBodyProps<T> {\n  rows: T;\n  columns: Column<T>[];\n}\n\nexport const TableBody: <T>(\n  props: TableBodyProps<T>\n) => React.ReactElement<TableBodyProps<T>> = ({ rows, columns }) => (\n  <tr>\n    {columns.map((column, key) => (\n      <Row key={key}>{rows[column.key]}</Row>\n    ))}\n  </tr>\n);\n\nexport const Table: <T>(\n  props: TableProps<T>\n) => React.ReactElement<TableProps<T>> = ({ columns, data }) => {\n  if (data.length === 0) return <div>No data</div>;\n  return (\n    <TableContainer>\n      <Thead>\n        <tr>\n          {columns.map((thead, key) => (\n            <td key={key}>{thead.name}</td>\n          ))}\n        </tr>\n      </Thead>\n      <tbody>\n        {data.map((rows, key) => (\n          <TableBody rows={rows} columns={columns} key={key} />\n        ))}\n      </tbody>\n    </TableContainer>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M 13 3 C 11.895 3 11 3.895 11 5 L 11 8 L 11 14.541016 A 4 4 0 0 0 9 14 A 4 4 0 0 0 5 18 A 4 4 0 0 0 9 22 A 4 4 0 0 0 13 18 L 13 8 L 16.5 8 C 17.881 8 19 6.881 19 5.5 C 19 4.119 17.881 3 16.5 3 L 13 3 z\"\n});\n\nvar SvgMelody = function SvgMelody(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#ffd23f\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    height: \"24px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMelody, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/melody.916c5209.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Title = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import * as React from \"react\";\nimport { $authors, getAuthors } from \"features/authors\";\nimport { useStore } from \"effector-react\";\nimport { Table, SearchField } from \"ui\";\nimport { Column } from \"ui/organisms/table\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { device } from \"constants/breakpoints\";\n\ntype AuthorSong = {\n  author: React.ReactElement;\n  description: string;\n};\n\nexport const Bands: React.FC = () => {\n  const authors = useStore($authors);\n  const column: Column<AuthorSong>[] = [{ key: \"author\", name: \"Author\" }];\n\n  React.useEffect(() => {\n    getAuthors();\n  }, []);\n  const data = authors.map(author => {\n    const link = <Link to={\"bands/\" + author._id}>{author.author}</Link>;\n    return {\n      author: link,\n      description: author.description\n    };\n  });\n  return (\n    <Content>\n      <SearchWrapper>\n        <SearchField placeholder=\"Name of the band\" />\n      </SearchWrapper>\n      <BandsBlock>\n        <Table data={data} columns={column} />\n      </BandsBlock>\n    </Content>\n  );\n};\n\nexport const BandsBlock = styled.div`\n  max-width: 300px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media ${device.tablet} {\n    width: 700px;\n  }\n  @media ${device.desktop} {\n    max-width: 1000px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const SearchWrapper = styled.div`\n  padding: 20px 0;\n  display: none;\n`;\n","import { createStore, createEvent, createEffect, sample } from \"effector\";\nimport { SongsType } from \"constants/types\";\nimport { addSong } from \"api/songs\";\n\nconst emptySong = {\n  _id: \"\",\n  title: \"\"\n};\n\nexport const submitForm = createEvent<React.FormEvent<HTMLFormElement>>();\n\nexport const $song = createStore<SongsType>(emptySong);\nexport const saveSong = createEffect<SongsType, void>();\nexport const handleChange = createEvent<any>();\n$song.on(handleChange, (state, event) => {\n  return { ...state, [event.target.name]: event.target.value };\n});\n\nsaveSong.use(addSong);\n\nsample({\n  source: $song,\n  clock: submitForm,\n  target: saveSong\n});\n","import { request } from \"lib/request\";\nimport { SongsType, SongVariation, Song } from \"constants/types\";\n\nexport const fetchLastRecords = (count: number): Promise<SongVariation[]> =>\n  request({\n    url: \"/last-records\",\n    method: \"get\",\n    params: { count: count }\n  });\n\nexport const fetchSongVariations = (songId: string): Promise<Song[]> =>\n  request({\n    url: `/song/${songId}`,\n    method: \"get\"\n  });\n\nexport const fetchLyricChrods = (id: string): Promise<SongVariation> =>\n  request({\n    url: `/variation/${id}`,\n    method: \"get\"\n  });\n\nexport const saveSongVariation = (\n  songVariation: SongVariation\n): Promise<void> =>\n  request({\n    url: `/add-song-variation`,\n    method: \"post\",\n    params: songVariation\n  });\n\nexport const addSong = (song: SongsType): Promise<void> =>\n  request({\n    url: `/add-song`,\n    method: \"post\",\n    params: song\n  });\n","import * as React from \"react\";\nimport { submitForm, handleChange } from \"./model\";\nimport { useStore } from \"effector-react\";\nimport { $song } from \"./model\";\nimport { getAuthors, $authors } from \"features/authors\";\n\nexport const CreateSong: React.FC = () => {\n  const { title, author } = useStore($song);\n  const authors = useStore($authors);\n\n  React.useEffect(() => {\n    getAuthors();\n  }, []);\n  return (\n    <div>\n      <form onSubmit={submitForm}>\n        <input type=\"text\" name=\"title\" value={title} onChange={handleChange} />\n        <div>\n          <div>Band:</div>\n          <select name=\"author\" value={author} onChange={handleChange}>\n            <option value=\"\">Select Author</option>\n            {authors.map(author => (\n              <option key={author._id} value={author._id}>\n                {author.author}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button>Save</button>\n      </form>\n    </div>\n  );\n};\n","import { createStore, createEffect, createEvent, sample } from \"effector\";\nimport { saveSongVariation } from \"api/songs\";\nimport { SongVariation } from \"constants/types\";\n\nexport const SongVariationEmty = {\n  title: \"\",\n  fullText: \"\",\n  lyrics: [],\n  songId: \"\",\n  chords: []\n};\n\nexport const saveSong = createEffect<SongVariation, void>();\nexport const handleChange = createEvent<any>();\nexport const $song = createStore<SongVariation>(SongVariationEmty);\nexport const updateSong = createEvent<any>();\nexport const submitForm = createEvent<React.FormEvent<HTMLFormElement>>();\n$song.on(handleChange, (state, event) => {\n  return { ...state, [event.target.name]: event.target.value };\n});\n\n$song.on(updateSong, (state, { lyrics, chords }) => {\n  return { ...state, lyrics, chords };\n});\n\nsaveSong.use(saveSongVariation);\n\nsample({\n  source: $song,\n  clock: submitForm,\n  target: saveSong\n});\n","export const chordsKeys = [\n  \"C\",\n  \"C#\",\n  \"D\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"G\",\n  \"Ab\",\n  \"A\",\n  \"Bb\",\n  \"B\"\n];\n\n// export const chordColor: string[] = [\n//   \"#E5FFDE\",\n//   \"#F5F1E3\",\n//   \"#FFAEA6\",\n//   \"#BBCBCB\",\n//   \"#087E8B\",\n//   \"#C17C74\",\n//   \"#FEFFBE\",\n//   \"#E5FFDE\",\n//   \"#FFAEA6\",\n//   \"#BBCBCB\",\n//   \"#C17C74\",\n//   \"#FEFFBE\"\n// ];\n\nexport const chordColor: string[] = [\n  \"#264653\",\n  \"#2a9d8f\",\n  \"#e9c46a\",\n  \"#f4a261\",\n  \"#e76f51\",\n  \"#ef476f\",\n  \"#ffd166\",\n  \"#06d6a0\",\n  \"#118ab2\",\n  \"#073b4c\",\n  \"#003049\",\n  \"#d62828\",\n  \"#f77f00\"\n];\n\nexport const chordsSuffixes = [\n  \"major\",\n  \"minor\",\n  \"m\",\n  \"dim\",\n  \"dim7\",\n  \"sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"7sg\",\n  \"alt\",\n  \"aug\",\n  \"6\",\n  \"69\",\n  \"7\",\n  \"7b5\",\n  \"aug7\",\n  \"9\",\n  \"9b5\",\n  \"aug9\",\n  \"7b9\",\n  \"7#9\",\n  \"11\",\n  \"9#11\",\n  \"13\",\n  \"maj7\",\n  \"maj7b5\",\n  \"maj7#5\",\n  \"maj9\",\n  \"maj11\",\n  \"maj13\",\n  \"m6\",\n  \"m69\",\n  \"m7\",\n  \"m7b5\",\n  \"m9\",\n  \"m11\",\n  \"mmaj7\",\n  \"mmaj7b5\",\n  \"mmaj9\",\n  \"mmaj11\",\n  \"add9\",\n  \"madd9\",\n  \"/E\",\n  \"/F\",\n  \"/F#\",\n  \"/G\",\n  \"/G#\",\n  \"/A\",\n  \"/Bb\",\n  \"/B\",\n  \"/C\",\n  \"/C#\",\n  \"m/B\",\n  \"m/C\",\n  \"m/C#\",\n  \"/D\",\n  \"m/D\",\n  \"/D#\",\n  \"m/D#\",\n  \"m/E\",\n  \"m/F\",\n  \"m/F#\",\n  \"m/G\",\n  \"m/G#\"\n];\n","import { chordsKeys, chordColor, chordsSuffixes } from \"constants/chords\";\nimport { ChordsType, LineType } from \"constants/types\";\n\nconst removeDuplicates = (array: Array<boolean>) => {\n  return array.filter((a, b) => array.indexOf(a) === b);\n};\n\nconst containsKey: (word: string) => string | undefined = word => {\n  let keyChord;\n  chordsKeys.forEach(chord => {\n    if (word.includes(chord)) {\n      keyChord = chord;\n    }\n  });\n  return keyChord;\n};\n\nconst checkIfChordsLine = (arrLine: Array<string>) =>\n  arrLine.map((word: string) => {\n    let isChord = false;\n    const chordKey = containsKey(word);\n    if (!chordKey) {\n      return isChord;\n    }\n\n    const suffix = word.slice(chordKey.length);\n    if (suffix.length === 0) {\n      isChord = true;\n      return isChord;\n    }\n\n    const hasSuffix = chordsSuffixes.includes(word.slice(chordKey.length));\n    if (chordKey && hasSuffix) {\n      isChord = true;\n    }\n    return isChord;\n  });\n\nexport const removeExtraSpaces = (line: string) =>\n  line\n    .replace(/\\s+/g, \" \")\n    .trim()\n    .split(\" \");\n\nexport const isChordsLine = (line: string) => {\n  const arrLine = removeExtraSpaces(line);\n  const lines = checkIfChordsLine(arrLine);\n  const simpleLine = removeDuplicates(lines);\n  return simpleLine.length === 1 && simpleLine[0];\n};\n\nexport const getAllChords = (lyrics: Array<string>) => {\n  const res: Set<string> = new Set();\n  lyrics.forEach(el => {\n    if (isChordsLine(el)) {\n      const chords = removeExtraSpaces(el);\n      chords.forEach(chord => res.add(chord));\n    }\n  });\n  return res;\n};\n\nexport const setColors = (chords: Set<string>) => {\n  const res: Set<ChordsType> = new Set();\n  let index = 0;\n  chords.forEach(chord => {\n    res.add({\n      afterSpaces: 0,\n      beforeSpaces: 0,\n      color: chordColor[index],\n      name: chord\n    });\n    index += 1;\n  });\n  return res;\n};\n\nconst findColorByName = (name: string, allChords: Set<ChordsType>) => {\n  let color = \"\";\n  allChords.forEach(chord => {\n    if (chord.name === name) {\n      color = chord.color;\n    }\n  });\n  return color;\n};\n\nexport const setChords = (\n  line: string,\n  chords: Array<string>,\n  allChords: Set<ChordsType>,\n  nextLine: string,\n  previousColor: string\n) => {\n  const res: Array<ChordsType> = [];\n  const maxLendth =\n    nextLine.length > line.length ? nextLine.length : line.length;\n  let index = 0;\n  let chordsLine = line;\n\n  if (line.indexOf(chords[0]) !== 0) {\n    const name = chords[0];\n    const position = line.indexOf(name);\n    chordsLine = chordsLine.replace(name, \" \".repeat(name.length));\n\n    const positionNext = line.indexOf(chords[1]);\n    res.push({\n      afterSpaces: positionNext - position - 1,\n      beforeSpaces: position,\n      color: previousColor || findColorByName(name, allChords),\n      name: name\n    });\n    index = 1;\n  }\n  console.log(chords.length);\n\n  for (let i = index; i < chords.length - 1; i++) {\n    const chordPosition = chordsLine.indexOf(chords[i]);\n    const name = chords[i];\n    chordsLine = chordsLine.replace(name, \" \".repeat(name.length));\n\n    const nextChordPosition = chordsLine.indexOf(chords[i + 1]);\n    const spases = nextChordPosition - chordPosition - name.length;\n    const chordColor = findColorByName(name, allChords);\n    res.push({\n      name: name,\n      beforeSpaces: 0,\n      afterSpaces: spases,\n      color: chordColor\n    });\n\n    console.log(\n      chords[i],\n      chords[i + 1],\n      chordPosition,\n      nextChordPosition,\n      spases,\n      chordsLine\n    );\n  }\n  const name = chords[chords.length - 1];\n  const chordColor = findColorByName(name, allChords);\n\n  if (chords.length > 1) {\n    res.push({\n      name: name,\n      beforeSpaces: 0,\n      afterSpaces:\n        maxLendth - chordsLine.indexOf(chords[chords.length - 2]) - name.length,\n      color: chordColor\n    });\n  }\n\n  return { res, chordColor };\n};\n\nexport const parseLyrics: (\n  lyrics: string\n) => { lyrics: LineType[]; chords: string[] } = lyrics => {\n  const lines: LineType[] = [];\n  const lyricLines = lyrics.split(/\\r?\\n/);\n  const allChords = getAllChords(lyricLines);\n  const chordsWithColors = setColors(allChords);\n  let previousColor = \"\";\n  for (let i = 0; i < lyricLines.length; i++) {\n    const line = lyricLines[i];\n    const nextLine = lyricLines[i + 1];\n    const containsChords = isChordsLine(line);\n    if (containsChords && nextLine !== \"\") {\n      const chords = removeExtraSpaces(line);\n      const { res: chordsInfo, chordColor: color } = setChords(\n        line,\n        chords,\n        chordsWithColors,\n        nextLine,\n        previousColor\n      );\n      previousColor = color;\n      lines.push({ chords: chordsInfo, text: nextLine });\n      i += 1;\n    } else {\n      const res: LineType = { text: line };\n      lines.push(res);\n      previousColor = \"\";\n    }\n  }\n  const lyricsChords = Array.from(allChords);\n  return { lyrics: lines, chords: lyricsChords };\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useStore } from \"effector-react\";\nimport { handleChange, $song, updateSong, submitForm } from \"./model\";\nimport { Text, Textarea, Input, Chords, LyricsText } from \"ui\";\nimport { Melody } from \"assets/icons\";\nimport { parseLyrics } from \"lib/chords\";\nimport {\n  $authors,\n  $authorSongs,\n  getAuthors,\n  getAuthorSongs\n} from \"features/authors\";\nimport { Line } from \"constants/types\";\n\nexport const CreateSongVariation: React.FC = () => {\n  const { title, fullText, lyrics } = useStore($song);\n  const authors = useStore($authors);\n  const authorSongs = useStore($authorSongs);\n  const [fontSize, changeFontSize] = React.useState(14);\n\n  const onClickHandler = React.useCallback(() => {\n    const data = parseLyrics(fullText);\n    updateSong(data);\n  }, [fullText]);\n\n  const preview =\n    lyrics && lyrics.length !== 0 ? (\n      <div>\n        {lyrics.map((line: Line, key: number) => (\n          <div key={key}>\n            <Chords fontSize={fontSize} data={line.chords} />\n            <LyricsText fontSize={fontSize}>{line.text}</LyricsText>\n          </div>\n        ))}\n      </div>\n    ) : (\n      <div>\n        <Melody />\n        <Melody />\n        <Melody />\n      </div>\n    );\n\n  console.log(lyrics);\n  React.useEffect(() => {\n    getAuthors();\n  }, []);\n\n  return (\n    <Song>\n      <button onClick={() => changeFontSize(fontSize + 1)}>+</button>\n      <button onClick={() => changeFontSize(fontSize - 1)}>-</button>\n      <form onSubmit={submitForm}>\n        <button type=\"submit\">Сохранить</button>\n        <div>\n          <Text>Title:</Text>\n          <Input name=\"title\" value={title} onChange={handleChange} />\n        </div>\n        <div>\n          <Text>Band:</Text>\n          <select\n            onChange={event => {\n              getAuthorSongs(event.target.value);\n            }}\n          >\n            <option value=\"\">Select Author</option>\n            {authors.map(author => (\n              <option key={author._id} value={author._id}>\n                {author.author}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <Text>Songs:</Text>\n          <select name=\"songId\" onChange={handleChange}>\n            <option value=\"\">Select Song</option>\n            {authorSongs &&\n              authorSongs.songs.map(song => (\n                <option key={song.id} value={song.id}>\n                  {song.title}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div>\n          <Text>Lyrics:</Text>\n          <Textarea name=\"fullText\" value={fullText} onChange={handleChange} />\n        </div>\n        <button type=\"button\" onClick={onClickHandler}>\n          Parse\n        </button>\n        <Text>Result:</Text>\n        {preview}\n      </form>\n    </Song>\n  );\n};\n\nexport const Song = styled.div`\n  padding: 20px;\n`;\n","import * as React from \"react\";\nimport { FormLogin } from \"ui\";\nimport styled from \"styled-components\";\n\nexport const Login: React.FC = () => (\n  <LoginPage>\n    <FormLogin />\n  </LoginPage>\n);\n\nexport const LoginPage = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 50px;\n`;\n","import styled from \"styled-components\";\nimport img from \"assets/img/background.jpg\";\nimport { device } from \"constants/breakpoints\";\n\nexport const MainPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SearchBlock = styled.div`\n  margin: 10px 15px;\n  height: 200px;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n`;\n\nexport const Background = styled.div`\n  width: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: var(--bg);\n  background-image: url(${img});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n\nexport const Content = styled.div`\n  @media ${device.tablet} {\n    width: 700px;\n  }\n  @media ${device.desktop} {\n    max-width: 1000px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const ContentSongs = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    width: 700px;\n    flex-direction: row;\n    padding-top: 30px;\n  }\n  @media ${device.desktop} {\n    max-width: 1000px;\n    width: 100%;\n    padding-top: 60px;\n  }\n`;\n","import { createStore, createEffect } from \"effector\";\nimport { fetchLastRecords } from \"api/songs\";\nimport { SongVariation } from \"constants/types\";\n\nexport const getLastRecords = createEffect<number, SongVariation[]>();\nexport const $lastSongs = createStore<SongVariation[] | null>(null);\n\n$lastSongs.on(getLastRecords.done, (_, payload) => payload.result);\n\ngetLastRecords.use(fetchLastRecords);\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { $lastSongs, getLastRecords } from \"./model\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { SongVariation } from \"constants/types\";\n\nexport const LastRecords: React.FC<{ count: number }> = ({ count }) => {\n  const lastSongs: SongVariation[] | null = useStore($lastSongs);\n\n  React.useEffect(() => {\n    getLastRecords(count);\n  }, [count]);\n\n  const songs =\n    !lastSongs || lastSongs.length === 0\n      ? \"No songs found\"\n      : lastSongs.map((song, key) => (\n          <SongLink key={key} to={\"/variation/\" + song._id}>\n            {song.title}\n          </SongLink>\n        ));\n\n  return (\n    <Container>\n      <Block>\n        <Big>Last</Big>\n        <Small>Songs</Small>\n      </Block>\n      <LastSongs>{songs}</LastSongs>\n    </Container>\n  );\n};\n\nexport const LastSongs = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n`;\n\nexport const Big = styled.div`\n  font-weight: 700;\n`;\n\nexport const Small = styled.div`\n  font-weight: 100;\n`;\n\nexport const Block = styled.div`\n  display: flex;\n  padding: 5px 0;\n  font-weight: 200;\n  font-size: 21px;\n  text-decoration: underline;\n  padding-bottom: 30px;\n`;\n\nexport const SongLink = styled(Link)`\n  text-decoration: none;\n  color: var(--primary);\n  padding-bottom: 20px;\n  position: relative;\n  ::after {\n    /*content: \"•\";*/\n    bottom: 0;\n    position: absolute;\n    left: 120px;\n    color: var(--accent);\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 10px 15px;\n  flex: 50%;\n`;\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { $lastSongs, getLastRecords } from \"./model\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { SongVariation } from \"constants/types\";\n\nexport const PopularRecords: React.FC<{ count: number }> = ({ count }) => {\n  const lastSongs: SongVariation[] | null = useStore($lastSongs);\n\n  React.useEffect(() => {\n    getLastRecords(count);\n  }, [count]);\n\n  const songs =\n    !lastSongs || lastSongs.length === 0\n      ? \"No songs found\"\n      : lastSongs.map((song, key) => (\n          <SongLink key={key} to={\"/variation/\" + song._id}>\n            {song.title}\n          </SongLink>\n        ));\n\n  return (\n    <Container>\n      <Block>\n        <Big>Popular</Big>\n        <Small>Songs</Small>\n      </Block>\n      <LastSongs>{songs}</LastSongs>\n    </Container>\n  );\n};\n\nexport const LastSongs = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n`;\n\nexport const Big = styled.div`\n  font-weight: 700;\n`;\n\nexport const Small = styled.div`\n  font-weight: 100;\n`;\n\nexport const Block = styled.div`\n  display: flex;\n  padding: 5px 0;\n  font-weight: 200;\n  font-size: 21px;\n  text-decoration: underline;\n  padding-bottom: 30px;\n`;\n\nexport const SongLink = styled(Link)`\n  text-decoration: none;\n  color: var(--primary);\n  padding-bottom: 20px;\n  position: relative;\n  ::after {\n    /*content: \"•\";*/\n    bottom: 0;\n    position: absolute;\n    left: 120px;\n    color: var(--accent);\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 10px 15px;\n  flex: 50%;\n`;\n","import { createStore, createEvent } from \"effector\";\n\nconst st = [\n  ` B        F#        B        F#        E          E7`,\n  `Good day sunshine, good day sunshine, good day sunshine`\n];\n\nexport const setField = createEvent();\nexport const $songTitle = createStore(\"\").on(\n  setField,\n  (_, newTitle) => newTitle\n);\n\nexport const $songText = createStore(st).on(setField, (_, newText) => newText);\n\nexport const handleChange = setField.prepend((e: any) => e.target.value);\n","import { createStore, createEvent } from \"effector\";\n\nexport const setSize = createEvent<number>();\nexport const $fontSize = createStore(14).on(setSize, (_, newSize) => newSize);\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { $songTitle, $songText } from \"features/song/model\";\nimport { $fontSize, setSize } from \"features/visuals/model\";\nimport styled, { StyledComponent } from \"styled-components\";\n\nexport const Song: React.FC = () => {\n  const title = useStore($songTitle);\n  const songText = useStore($songText);\n  const fontSize = useStore($fontSize);\n  return (\n    <>\n      <button onClick={() => setSize(fontSize + 1)}>+</button>\n      <button onClick={() => setSize(fontSize - 1)}>-</button>\n      <div>{title}</div>\n      <Lyric fontSize={fontSize}>{songText[0]}</Lyric>\n      <Lyric fontSize={fontSize}>{songText[1]}</Lyric>\n    </>\n  );\n};\n\nexport const Lyric: StyledComponent<any, any, any> = styled.div<{\n  fontSize: number;\n}>`\n  font-size: ${props => props.fontSize}px;\n`;\n","import { createStore, createEffect } from \"effector\";\nimport { fetchSongVariations } from \"api/songs\";\nimport { Song } from \"constants/types\";\n\nexport const getSongVariations = createEffect<string, Song[]>();\nexport const $songVariations = createStore<Song[]>([]);\n\ngetSongVariations.use(fetchSongVariations);\n\n$songVariations.on(getSongVariations.done, (_, { result }) => {\n  return result;\n});\n\n$songVariations.on(getSongVariations.fail, (_, { params, error }) => {\n  console.log(params, error);\n});\n","import { createStore, createEffect } from \"effector\";\nimport { fetchLyricChrods } from \"api/songs\";\nimport { SongVariation } from \"constants/types\";\n\nexport const getLyricChrods = createEffect<string, SongVariation>();\nexport const $lyricChords = createStore<SongVariation | null>(null);\n\ngetLyricChrods.use(fetchLyricChrods);\n\n$lyricChords.on(getLyricChrods.done, (_, { result }) => {\n  return result;\n});\n\n$lyricChords.on(getLyricChrods.fail, (_, { params, error }) => {\n  console.log(params, error);\n});\n","import styled from \"styled-components\";\nimport { device } from \"constants/breakpoints\";\n\nexport const Lyrics = styled.div`\n  margin: 0 15px;\n`;\n\nexport const ChordContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Top = styled.div`\n  display: flex;\n  padding-bottom: 50px;\n`;\n\nexport const ChordsScheme = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: white;\n  height: 100%;\n  min-width: 100px;\n  overflow-y: scroll;\n  @media ${device.tablet} {\n    flex-direction: row;\n  }\n`;\n\nexport const Page = styled.div`\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  @media ${device.tablet} {\n    flex-direction: column;\n  }\n`;\n\nexport const Switches = styled.div`\n  display: flex;\n`;\n\nexport const Changes = styled.div`\n  display: flex;\n  display: none;\n`;\n\nexport const SwitchBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 30px 0 20px;\n`;\n","import { createStore, createEvent } from \"effector\";\n\nexport const changeInstrument = createEvent();\n\nexport const $isGuitar = createStore<boolean>(false).on(\n  changeInstrument,\n  state => !state\n);\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { getLyricChrods, $lyricChords } from \"features/song\";\nimport { useParams } from \"react-router\";\nimport { SongTitle, Chords, LyricsText, Switch } from \"ui\";\nimport {\n  Changes,\n  ChordContainer,\n  ChordsScheme,\n  Lyrics,\n  Page,\n  Switches,\n  SwitchBlock\n} from \"./style\";\nimport Chord from \"@tombatossals/react-chords/lib/Chord\";\nimport * as ukulele from \"lib/chords/ukulele.json\";\nimport * as guitar from \"lib/chords/guitar.json\";\nimport { ChordsType, SongVariation } from \"constants/types\";\nimport { cutText } from \"lib/chords/fitChords\";\nimport { $isGuitar, changeInstrument } from \"./model\";\n\ninterface ChordsAndTextProps {\n  chords: ChordsType[];\n  fontSize: number;\n  isChordsOn: boolean;\n  isLyricsOn: boolean;\n  maxSize: number;\n  text: string;\n}\n\ninterface DisplayProps {\n  chordToDisplay: string;\n}\n\ninterface TabProps {\n  chords: string[];\n}\n\nconst showChords = (\n  chords: any,\n  main: any,\n  tunings: any,\n  chordToDisplay: string\n) => {\n  const mains: keyof T = chordToDisplay.slice(0, 1);\n  const suffix =\n    chordToDisplay.slice(1) === \"\" || chordToDisplay.slice(1) === \"m\"\n      ? \"major\"\n      : chordToDisplay.slice(1);\n\n  const allUkulelechords: T = chords;\n  const chordsOfInstrument = {\n    ...main,\n    tunings\n  };\n\n  try {\n    const chord = allUkulelechords[mains].find(\n      (el: any) => el.suffix === suffix\n    );\n    if (!chord) return null;\n\n    return (\n      <ChordContainer>\n        <div>{chordToDisplay}</div>\n        <Chord chord={chord.positions[0]} instrument={chordsOfInstrument} />\n      </ChordContainer>\n    );\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const SongChords: React.FC = () => {\n  const { id } = useParams();\n  const [isChordsOn, setChrodsSwitch] = React.useState(true);\n  const [isLyricsOn, setLyricsSwitch] = React.useState(true);\n\n  const isGuitar = useStore($isGuitar);\n  React.useEffect(() => {\n    if (id) {\n      getLyricChrods(id);\n    }\n  }, [id]);\n  const lyricChords: SongVariation | null = useStore($lyricChords);\n  const [fontSize, changeFontSize] = React.useState(14);\n\n  if (!lyricChords) return null;\n  const { title, lyrics, chords } = lyricChords;\n  const maxSize = (window.innerWidth - 30) / (fontSize - 5);\n\n  return (\n    <Page>\n      {chords && <Tab chords={chords} />}\n      <div>\n        <Changes>\n          <button onClick={() => changeFontSize(fontSize + 1)}>+</button>\n          <button onClick={() => changeFontSize(fontSize - 1)}>-</button>\n        </Changes>\n        <SwitchBlock>\n          Ukulele\n          <Switch\n            status={isGuitar}\n            onClick={() => changeInstrument()}\n            id=\"instrument\"\n          />\n          Guitar\n        </SwitchBlock>\n        <SongTitle>{title}</SongTitle>\n        <Switches>\n          <Switch status={isLyricsOn} onClick={setLyricsSwitch} id=\"lyrics\" />{\" \"}\n          Lyrics\n          <Switch status={isChordsOn} onClick={setChrodsSwitch} id=\"chords\" />\n          Chords\n        </Switches>\n\n        <Lyrics>\n          {lyrics.map((lyricLine, key) => (\n            <ChordsAndText\n              {...lyricLine}\n              key={key}\n              maxSize={maxSize}\n              fontSize={fontSize}\n              isChordsOn={isChordsOn}\n              isLyricsOn={isLyricsOn}\n            />\n          ))}\n        </Lyrics>\n      </div>\n    </Page>\n  );\n};\n\nexport const ChordsAndText: React.FC<ChordsAndTextProps> = ({\n  chords,\n  fontSize,\n  isChordsOn,\n  isLyricsOn,\n  maxSize,\n  text\n}) => {\n  if (text.length > maxSize) {\n    const lines = cutText(text, chords, maxSize);\n    return (\n      <div>\n        {lines.map(({ chords, text }) => (\n          <div>\n            {isChordsOn && (\n              <Chords\n                showSpaces={isLyricsOn}\n                data={chords}\n                fontSize={fontSize}\n              />\n            )}\n            {isLyricsOn && <LyricsText fontSize={fontSize}>{text}</LyricsText>}\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        {isChordsOn && (\n          <Chords showSpaces={isLyricsOn} data={chords} fontSize={fontSize} />\n        )}\n        {isLyricsOn && <LyricsText fontSize={fontSize}>{text}</LyricsText>}\n      </div>\n    );\n  }\n};\n\nexport const Tab: React.FC<TabProps> = ({ chords }) => (\n  <ChordsScheme>\n    {chords.map((chord, key) => (\n      <Display chordToDisplay={chord} key={key} />\n    ))}\n  </ChordsScheme>\n);\n\ntype T = any;\n\nexport const Display: React.FC<DisplayProps> = ({ chordToDisplay }) => {\n  const isGuitar = useStore($isGuitar);\n\n  if (isGuitar) {\n    return showChords(\n      guitar.chords,\n      guitar.main,\n      guitar.tunings,\n      chordToDisplay\n    );\n  } else {\n    return showChords(\n      ukulele.chords,\n      ukulele.main,\n      ukulele.tunings,\n      chordToDisplay\n    );\n  }\n};\n","import { ChordsType } from \"constants/types\";\n\nexport const cutText = (\n  text: string,\n  chords: ChordsType[],\n  maxSize: number\n) => {\n  const textWords = text.split(\" \");\n  const lines = [];\n  let line = \"\";\n\n  textWords.forEach(word => {\n    if ((line + word).length > maxSize) {\n      lines.push(line);\n      line = \"\";\n    }\n    line += word + \" \";\n  });\n\n  lines.push(line);\n\n  let chordIndex = 0;\n  const final = [];\n\n  for (let i = 0; i < lines.length; i++) {\n    const lineLength = lines[i].length;\n    const lineChords = [];\n    let chordLength = 0;\n\n    while (chordLength < lineLength) {\n      let chord = chords[chordIndex];\n      if (chord === undefined) {\n        break;\n      }\n      const fullChordLendth =\n        chord.beforeSpaces + chord.name.length + chord.afterSpaces;\n      if (\n        chord.beforeSpaces > lineLength ||\n        chord.beforeSpaces + chord.name.length > lineLength\n      ) {\n        lineChords.push({\n          name: \" \",\n          afterSpaces: 0,\n          beforeSpaces: lineLength - 1,\n          color: chord.color\n        });\n        chord = {\n          ...chords[chordIndex],\n          beforeSpaces: chords[chordIndex].beforeSpaces - lineLength\n        };\n        chords[chordIndex] = chord;\n        chordLength = lineLength;\n      } else if (fullChordLendth > lineLength) {\n        const remainSpaces = fullChordLendth - lineLength;\n        const afterSpaces = chord.afterSpaces - remainSpaces;\n\n        lineChords.push({\n          name: chord.name,\n          afterSpaces: afterSpaces,\n          beforeSpaces: chord.beforeSpaces,\n          color: chord.color\n        });\n        chord = {\n          name: \" \",\n          beforeSpaces: remainSpaces - 1,\n          color: chords[chordIndex].color,\n          afterSpaces: 0\n        };\n\n        chords[chordIndex] = chord;\n        chordLength = lineLength;\n      } else {\n        lineChords.push({ ...chord });\n        chordLength += fullChordLendth;\n        chordIndex += 1;\n      }\n    }\n    final.push({ chords: lineChords, text: lines[i] });\n  }\n  return final;\n};\n","import {\n  Bands,\n  Band,\n  Login,\n  Main,\n  SongVariations,\n  CreateSong,\n  SongChords\n} from \"./\";\nimport { CreateSongVariation } from \"./create/variation\";\n\nexport const routes = [\n  {\n    path: \"/\",\n    component: Main,\n    exact: true\n  },\n  {\n    path: \"/song/:id\",\n    component: SongVariations\n  },\n  {\n    path: \"/create-song\",\n    component: CreateSong\n  },\n  {\n    path: \"/bands\",\n    component: Bands,\n    exact: true\n  },\n  {\n    path: \"/bands/:id\",\n    component: Band\n  },\n  {\n    path: \"/variation/:id\",\n    component: SongChords\n  },\n  {\n    path: \"/create-song-variation\",\n    component: CreateSongVariation\n  },\n  {\n    path: \"/login\",\n    component: Login\n  }\n];\n","import * as React from \"react\";\nimport { SearchField, Title } from \"ui\";\nimport {\n  Background,\n  Content,\n  ContentSongs,\n  MainPage,\n  SearchBlock\n} from \"./style\";\nimport { LastRecords } from \"./last-records\";\nimport { PopularRecords } from \"./popular-records\";\n\nexport const Main: React.FC = () => (\n  <MainPage>\n    <Background>\n      <Content>\n        <Title>Sing songs</Title>\n        <SearchBlock>\n          <SearchField placeholder=\"Enter name of the song\" />\n        </SearchBlock>\n      </Content>\n    </Background>\n    <ContentSongs>\n      <LastRecords count={10} />\n      <PopularRecords count={10} />\n    </ContentSongs>\n  </MainPage>\n);\n","import * as React from \"react\";\nimport { useStore } from \"effector-react\";\nimport { $songVariations, getSongVariations } from \"features/song\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Table } from \"ui\";\nimport { Column } from \"ui/organisms/table\";\nimport { Song } from \"constants/types\";\n\ntype Variation = {\n  title: React.ReactElement;\n};\n\nexport const SongVariations: React.FC = () => {\n  const { id } = useParams();\n  React.useEffect(() => {\n    if (id) {\n      getSongVariations(id);\n    }\n  }, [id]);\n  const songVariations: Song[] = useStore($songVariations);\n  const data = songVariations.map(variation => {\n    const title = (\n      <Link to={\"/variation/\" + variation.id}>{variation.title}</Link>\n    );\n    return {\n      title: title\n    };\n  });\n  const column: Column<Variation>[] = [\n    {\n      name: \"Песни\",\n      key: \"title\"\n    }\n  ];\n\n  return (\n    <div>\n      <Table data={data} columns={column} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport {\n  $authorSongsPending,\n  getAuthorSongs,\n  $authorSongs\n} from \"features/authors\";\nimport { useStore } from \"effector-react\";\nimport { Table } from \"ui\";\nimport { Column } from \"ui/organisms/table\";\nimport { useParams } from \"react-router\";\nimport { AuthorSongs } from \"api/authors\";\nimport { Melody } from \"assets/icons\";\nimport { Title } from \"./style\";\n\ntype Song = {\n  title: React.ReactElement;\n};\n\nexport const Band: React.FC = () => {\n  const { id } = useParams();\n  React.useEffect(() => {\n    if (id) {\n      getAuthorSongs(id);\n    }\n  }, [id]);\n  const authorSongs: AuthorSongs | null = useStore($authorSongs);\n  const authorSongsPending = useStore($authorSongsPending);\n\n  if (authorSongsPending) return <div>Loading</div>;\n  if (!authorSongs) return <div>Песен пока что нет.</div>;\n\n  const column: Column<Song>[] = [{ key: \"title\", name: authorSongs.author }];\n  const songs = authorSongs.songs.map(song => {\n    const title = (\n      <Title to={\"/song/\" + song.id}>\n        {song.title}\n        <Melody />\n      </Title>\n    );\n    return {\n      title: title\n    };\n  });\n  return <Table data={songs} columns={column} />;\n};\n","import styled from \"styled-components\";\n\nexport const Body = styled.div`\n  padding-top: 55px;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { routes } from \"./pages/router\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./ui\";\nimport \"./index.css\";\nimport { Body } from \"./style\";\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Body>\n        <Switch>\n          {routes.map((route: any, key) => (\n            <Route key={key} {...route} />\n          ))}\n        </Switch>\n      </Body>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}